{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/camagru/camagru/src/App.js\";\nimport React from 'react';\nimport Header from './components/header.js';\nimport Footer from './components/footer.js';\nimport Stream from './components/stream.js';\nimport Account from './components/account.js';\nimport Post from './components/post.js';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport { APIUrl, baseURL } from './global.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.login = (username, pass) => {\n      // backend\n      // check to see if credentials match\n      fetch(\"\".concat(APIUrl, \"/users/login\"), {\n        method: 'post',\n        headers: {\n          'Origin': baseURL,\n          'Access-Control-Request-Method': 'POST',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: username,\n          password: pass\n        })\n      }).then(res => res.json()).then(data => console.log(data));\n\n      if (false) {\n        this.setState({\n          user: username\n        });\n      } //else this.logout();\n\n    };\n\n    this.logout = (username, pass) => {\n      this.setState({\n        user: \"\"\n      });\n    };\n\n    this.showme = () => {\n      console.log(this.state);\n    };\n\n    this.state = {\n      user: null\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.showme = this.showme.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      showme: this.showme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Account, {\n        user: this.state.user,\n        login: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/create\",\n      render: () => React.createElement(Stream, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      render: () => React.createElement(Post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      user: this.state.user,\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chris/Desktop/camagru/camagru/src/App.js"],"names":["React","Header","Footer","Stream","Account","Post","BrowserRouter","Route","APIUrl","baseURL","App","Component","constructor","login","username","pass","fetch","method","headers","body","JSON","stringify","email","password","then","res","json","data","console","log","setState","user","logout","showme","state","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/header.js';\nimport Footer from './components/footer.js';\nimport Stream from './components/stream.js';\nimport Account from './components/account.js';\nimport Post from './components/post.js';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport { APIUrl, baseURL} from './global.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null\n    };\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.showme = this.showme.bind(this);\n  }\n\n  login = (username, pass) => {\n    // backend\n    // check to see if credentials match\n    fetch(`${APIUrl}/users/login`, {\n      method: 'post',\n      headers: {\n\t\t\t\t'Origin': baseURL,\n\t\t\t\t'Access-Control-Request-Method': 'POST',\n\t\t\t\t'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: username,\n        password: pass\n      })\n    }).then(res => res.json())\n    .then(data => console.log(data));\n\n    if (false) {\n      this.setState({\n        user: username\n      });\n    } //else this.logout();\n  };\n\n  logout = (username, pass) => {\n    this.setState({\n      user: \"\"\n    });\n  };\n\n  showme = () => {\n    console.log(this.state);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header showme={this.showme} />\n          <Route\n            path=\"/\"\n            render={() => <Account user={this.state.user} login={this.login} />}\n            exact\n          />\n          <Route\n            path=\"/create\"\n            render={() => <Stream user={this.state.user} />}\n          />\n          <Route\n            path=\"/home\"\n            render={() => <Post />}\n          />\n          <Footer user={this.state.user} logout={this.logout} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}