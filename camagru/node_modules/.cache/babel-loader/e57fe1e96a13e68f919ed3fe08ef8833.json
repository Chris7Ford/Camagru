{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/camagru/camagru/src/components/post.js\";\nimport React from \"react\";\nimport \"./post.css\";\nimport Content from \"./content.js\";\nimport { APIUrl, baseURL } from \"../global\";\n\nclass Post extends React.Component {\n  constructor() {\n    super();\n\n    this.getPosts = () => {\n      fetch(\"\".concat(APIUrl, \"/posts/getAll\")).then(response => response.json()).then(data => {\n        this.setState({\n          posts: data,\n          posts_loaded: true\n        });\n      });\n    };\n\n    this.setCommentId = id => {\n      this.setState({\n        commentId: id\n      });\n    };\n\n    this.showModal = postId => {\n      this.setPostId(postId);\n      document.querySelector(\"#myModal\").style.display = \"block\";\n      fetch(\"\".concat(APIUrl, \"/posts/getComments?postId=\").concat(postId)).then(response => response.json()).then(data => {\n        this.setState({\n          comments_loaded: true,\n          comments: data\n        });\n      });\n    };\n\n    this.closeModal = () => {\n      document.querySelector(\"#myModal\").style.display = \"none\";\n    };\n\n    this.handleComment = e => {\n      this.setState({\n        comment: e.target.value\n      });\n    };\n\n    this.setPostId = id => {\n      this.setState({\n        postId: id\n      });\n    };\n\n    this.submitComment = () => {\n      fetch(\"\".concat(APIUrl, \"/posts/addComment\"), {\n        method: 'post',\n        headers: {\n          'Origin': baseURL,\n          'Access-Control-Request-Method': 'POST',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          postId: this.state.postId,\n          userId: this.props.user.id,\n          content: this.state.comment\n        })\n      }).then(response => response.json()).then(data => alert(data.response));\n      document.querySelector(\".comment-entry\").value = \"\";\n      window.location.reload();\n    };\n\n    this.likePost = (postId, userId) => {\n      console.log(postId);\n      fetch(\"\".concat(APIUrl, \"/posts/likePost\"), {\n        method: 'post',\n        headers: {\n          'Origin': baseURL,\n          'Access-Control-Request-Method': 'POST',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          postId: postId,\n          userId: userId\n        })\n      }).then(response => response.json()).then(data => alert(data.response));\n      window.location.reload();\n    };\n\n    this.state = {\n      posts: null,\n      posts_loaded: false,\n      comments_loaded: false,\n      comments: null,\n      postId: -1,\n      comment: \"\"\n    };\n    this.likePost = this.likePost.bind(this);\n    this.setCommentId = this.setCommentId.bind(this);\n    this.setPostId = this.setPostId.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  render() {\n    if (this.state.posts_loaded) {\n      return React.createElement(\"div\", {\n        className: \"postContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"myModal\",\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"close\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\xD7\"), this.state.comments !== null && this.state.comments.length > 0 && this.state.comments.map(comment => React.createElement(\"div\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, comment.username, \" at \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), \" \", comment.date.split(\".\")[0].replace(\"T\", \" \")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, comment.content), \" \", React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), this.props.user !== null && React.createElement(React.Fragment, null, React.createElement(\"textarea\", {\n        className: \"comment-entry\",\n        onChange: this.handleComment,\n        placeholder: \"Enter your comment here (Max 90 characters)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.submitComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Submit\")))), this.state.posts.map(post => React.createElement(Content, {\n        showModal: this.showModal,\n        closeModal: this.closeModal,\n        likePost: this.likePost,\n        user: this.props.user,\n        postData: post,\n        setCommentId: this.setCommentId,\n        key: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"loading\");\n    }\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/chris/Desktop/camagru/camagru/src/components/post.js"],"names":["React","Content","APIUrl","baseURL","Post","Component","constructor","getPosts","fetch","then","response","json","data","setState","posts","posts_loaded","setCommentId","id","commentId","showModal","postId","setPostId","document","querySelector","style","display","comments_loaded","comments","closeModal","handleComment","e","comment","target","value","submitComment","method","headers","body","JSON","stringify","state","userId","props","user","content","alert","window","location","reload","likePost","console","log","bind","componentDidMount","render","length","map","username","date","split","replace","post"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./post.css\";\nimport Content from \"./content.js\";\nimport { APIUrl, baseURL } from \"../global\";\n\nclass Post extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tposts: null,\n\t\t\tposts_loaded: false,\n\t\t\tcomments_loaded: false,\n\t\t\tcomments: null,\n\t\t\tpostId: -1,\n\t\t\tcomment: \"\"\n\t\t}\n\t\tthis.likePost = this.likePost.bind(this);\n\t\tthis.setCommentId = this.setCommentId.bind(this);\n\t\tthis.setPostId = this.setPostId.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getPosts();\n\t}\n\n\tgetPosts = () => {\n\t\tfetch(`${APIUrl}/posts/getAll`)\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tposts: data,\n\t\t\t\tposts_loaded: true\n\t\t\t});\n\t\t})\n\t}\n\n\tsetCommentId = (id) => {\n\t\tthis.setState({\n\t\t\tcommentId: id\n\t\t})\n\t}\n\n\tshowModal = (postId) => {\n\t\tthis.setPostId(postId);\n\t\tdocument.querySelector(\"#myModal\").style.display = \"block\";\n\t\tfetch(`${APIUrl}/posts/getComments?postId=${postId}`)\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t\tthis.setState({\n\t\t\t\tcomments_loaded: true,\n\t\t\t\tcomments: data\n\t\t\t})\n\t\t});\n\t}\n\n\tcloseModal = () => {\n\t\tdocument.querySelector(\"#myModal\").style.display = \"none\";\n\t}\n\n\thandleComment = (e) => {\n\t\tthis.setState({\n\t\t\tcomment : e.target.value\n\t\t});\n\t}\n\n\tsetPostId = (id) => {\n\t\tthis.setState({\n\t\t\tpostId: id\n\t\t})\n\t}\n\n\tsubmitComment = () => {\n\t\tfetch(`${APIUrl}/posts/addComment`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Origin': baseURL,\n\t\t\t\t'Access-Control-Request-Method': 'POST',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId: this.state.postId,\n\t\t\t\tuserId: this.props.user.id,\n\t\t\t\tcontent: this.state.comment\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(data => alert(data.response));\n\t\tdocument.querySelector(\".comment-entry\").value = \"\";\n\t\twindow.location.reload();\n\t}\n\n\tlikePost = (postId, userId) => {\n\t\tconsole.log(postId);\n\t\tfetch(`${APIUrl}/posts/likePost`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Origin': baseURL,\n\t\t\t\t'Access-Control-Request-Method': 'POST',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId: postId,\n\t\t\t\tuserId: userId\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(data => alert(data.response));\n\t\twindow.location.reload();\n\t}\n\n\trender() {\n\t\tif (this.state.posts_loaded)\n\t\t{\n\t\t\treturn (\n\t\t\t\t<div className=\"postContainer\">\n\t\t\t\t\t<div id=\"myModal\" className=\"modal\">\n\t\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t\t<span className=\"close\" onClick={this.closeModal}>&times;</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.comments !== null && this.state.comments.length > 0 &&\n\t\t\t\t\t\t\t\tthis.state.comments.map(comment => <div key={comment.id}><h4>{comment.username} at <br /> {comment.date.split(\".\")[0].replace(\"T\", \" \")}</h4><p>{comment.content}</p> <hr /></div>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.user !== null &&\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<textarea className=\"comment-entry\" onChange={this.handleComment} placeholder=\"Enter your comment here (Max 90 characters)\" />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={this.submitComment}>Submit</button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.posts.map(post => \n\t\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\tshowModal={this.showModal}\n\t\t\t\t\t\t\tcloseModal={this.closeModal}\n\t\t\t\t\t\t\tlikePost={this.likePost}\n\t\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\t\tpostData={post}\n\t\t\t\t\t\t\tsetCommentId={this.setCommentId}\n\t\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\tloading\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}